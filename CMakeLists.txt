cmake_minimum_required(VERSION 3.20)
project ("double-sided-qr")
add_executable (qrgen "main.cpp" "build_qr_code.hpp" "crc.hpp" "logger.hpp" "makeseg.hpp" "qr_constants.hpp" "reed_solomon_helper.hpp" "save_matrix.hpp")
add_subdirectory(libcorrect EXCLUDE_FROM_ALL)
set_target_properties(correct PROPERTIES OUTPUT_NAME "correct-shared")
set_target_properties(fec_shim_shared PROPERTIES OUTPUT_NAME "fec-shared")

set_property(TARGET qrgen PROPERTY CXX_STANDARD 20)

target_include_directories(qrgen PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/libcorrect/include")
target_link_libraries(qrgen correct_static)
if(EMSCRIPTEN)
	set(CMAKE_EXECUTABLE_SUFFIX ".js")
	set_target_properties(qrgen PROPERTIES COMPILE_FLAGS "-sUSE_BOOST_HEADERS=1 -O3" LINK_FLAGS "-sEXPORTED_FUNCTIONS=_do_search,_main,_malloc -sEXPORTED_RUNTIME_METHODS=allocateUTF8 -sASYNCIFY")
	add_custom_command(TARGET qrgen POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_CURRENT_SOURCE_DIR}/index.html" "${CMAKE_CURRENT_BINARY_DIR}")
else()
	find_package(OpenCV REQUIRED)
	target_include_directories(qrgen PRIVATE ${OpenCV_INCLUDE_DIRS})
	target_link_libraries(qrgen ${OpenCV_LIBS})
endif()